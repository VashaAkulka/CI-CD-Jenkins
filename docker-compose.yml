version: "3.4"

services:
  sonarqube:
    image: sonarqube:8.9-community
    restart: always
    container_name: sonarqube
    depends_on:
      - postgres
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar

  postgres:
    image: postgres:12.2-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sonar" ]
      interval: 10s
      timeout: 5s
      retries: 5

  jenkins:
    image: jenkins/jenkins:lts
    restart: always
    privileged: true
    user: root
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:5000"

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    environment:
      - NGROK_AUTHTOKEN=2gVAnMBuF0sRTQZshKTWReipZ3W_7ypLUMR92jyVbuurUzz57
    command: [ "http", "8080" ]
    network_mode: "host"